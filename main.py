import telebot
from telebot import types
from token_const import token

bot = telebot.TeleBot(token)  # token file ignored


@bot.message_handler(commands=['start'])
@bot.message_handler(func=lambda message: message.text == '–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é‚úÖ')
def start(message: types.Message):
    markup = types.ReplyKeyboardMarkup()
    markup.row('–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ‚è±', '–ö–æ–Ω—Ç–∞–∫—Ç—ãüìû')
    markup.row('–°–ø—Ä–∞–≤–∫–∏üìù', 'FAQüí°')
    bot.send_message(message.from_user.id,
                     '–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É—é, —á—Ç–æ —Ç–µ–±—è –∏–Ω—Ç–µ—Ä–µ—Å—É–µ—Ç?',
                     reply_markup=markup)


@bot.message_handler(func=lambda message: message.text == '–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ‚è±')
def schedule(message: types.Message):
    markup = types.ReplyKeyboardMarkup()
    markup.row('1 –∫—É—Ä—Å', '2 –∫—É—Ä—Å')
    markup.row('3 –∫—É—Ä—Å', '4 –∫—É—Ä—Å')
    markup.row('–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é‚úÖ')
    bot.send_message(message.from_user.id, '–í—ã–±–µ—Ä–∏ –∫—É—Ä—Å',
                     reply_markup=markup)


@bot.message_handler(func=lambda message: message.text == '–ö–æ–Ω—Ç–∞–∫—Ç—ãüìû')
def contacts(message: types.Message):
    markup = types.ReplyKeyboardMarkup()
    markup.row('–î–µ–∫–∞–Ω–∞—Ç', '–ü—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª–∏')
    markup.row('–°—Ç—É–¥. –¶–µ–Ω—Ç—Ä EnMan')
    markup.row('–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é‚úÖ')
    bot.send_message(message.from_user.id, '–° –∫–µ–º —Ö–æ—Ç–∏—Ç–µ —Å–≤—è–∑–∞—Ç—å—Å—è?',
                     reply_markup=markup)


@bot.message_handler(func=lambda message: message.text == '–î–µ–∫–∞–Ω–∞—Ç')
def deanery(message: types.Message):
    markup = types.ReplyKeyboardMarkup()
    markup.row('–°–µ—Ä–µ–±—Ä–µ–Ω–Ω–∏–∫–æ', '–•–∞—Ä–∏—Ç–æ–Ω–æ–≤', '–°—Ç—É–ª–æ–≤—Å–∫–∏–π')
    markup.row('–ú–∏–ª—å—á–∞–∫–æ–≤', '–ú—É—Ä–∑–∞–≥–∞—Ä–µ–µ–≤', '–ú–∞–∫—Å–∏–º–µ–Ω–∫–æ–≤–∞')
    markup.row('–ê–ª–µ–∫—Å–µ–µ–≤–∞', '–§—Ä–æ–ª–æ–≤–∞', '–ö–æ–Ω—Ç–∞–∫—Ç—ãüìû')
    bot.send_message(message.from_user.id, '–°–ø–∏—Å–æ–∫ –¥–µ–∫–∞–Ω–∞—Ç–∞',
                     reply_markup=markup)


@bot.message_handler(func=lambda message: message.text == '–ü—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª–∏')
def teachers(message: types.Message):
    markup = types.ReplyKeyboardMarkup()
    markup.row('–ú–∞—Ç–µ–º–∞—Ç–∏–∫–∞', '–ü—Å–∏—Ö–æ–ª–æ–≥–∏—è')
    markup.row('–§–∏–ª–æ—Å–æ—Ñ–∏—è', '–≠–∫–æ–Ω–æ–º–∏—á–µ—Å–∫–∞—è —Ç–µ–æ—Ä–∏—è')
    markup.row('–ú–µ–Ω–µ–¥–∂–º–µ–Ω—Ç', '–ò—Å—Ç–æ—Ä–∏—è', '–ê–Ω–≥–ª–∏–π—Å–∫–∏–π')
    markup.row('–ö–æ–Ω—Ç–∞–∫—Ç—ãüìû')
    bot.send_message(message.from_user.id, '–í—ã–±–µ—Ä–∏ –ø—Ä–µ–¥–º–µ—Ç',
                     reply_markup=markup)


@bot.message_handler(func=lambda message: message.text == '–°–ø—Ä–∞–≤–∫–∏üìù')
def references(message: types.Message):
    markup = types.ReplyKeyboardMarkup()
    markup.row('–ó–∞–∫–∞–∑–∞—Ç—å —Å–ø—Ä–∞–≤–∫—É')
    markup.row('–°–ø—Ä–∞–≤–∫–∞ –æ–± –æ–±—É—á–µ–Ω–∏')
    markup.row('–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é‚úÖ')
    bot.send_message(message.from_user.id, '–î–æ—Å—Ç—É–ø–Ω—ã–µ —Å–ø—Ä–∞–≤–∫–∏',
                     reply_markup=markup)


@bot.message_handler(func=lambda message: message.text == 'FAQüí°')
def faq(message: types.Message):
    markup = types.ReplyKeyboardMarkup()
    markup.row('–û —Ñ–∞–∫—É–ª—å—Ç–µ—Ç–µ', '–î–ª—è —Å—Ç—É–¥–µ–Ω—Ç–∞')
    markup.row('–î–ª—è –∞–±–∏—Ç—É—Ä–∏–µ–Ω—Ç–∞')
    markup.row('–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é‚úÖ')
    bot.send_message(message.from_user.id, '–ß—Ç–æ —Ç–µ–±–µ –∏–Ω–µ—Ç–µ—Ä—Å–Ω–æ?',
                     reply_markup=markup)


@bot.message_handler(func=lambda message: message.text == '–î–ª—è —Å—Ç—É–¥–µ–Ω—Ç–∞')
def for_student(message: types.Message):
    markup = types.ReplyKeyboardMarkup()
    markup.row('–ö–∞–∫ —Å–¥–µ–ª–∞—Ç—å —Å–ø—Ä–∞–≤–∫—É –¥–ª—è –≤–æ–µ–Ω–∫–æ–º–∞—Ç–∞')
    markup.row('FAQüí°')
    bot.send_message(message.from_user.id, '–í–æ—Ç —Ä—É–∫–æ–≤–æ–¥—Å—Ç–≤–∞ –¥–ª—è —Å—Ç—É–¥–µ–Ω—Ç–∞',
                     reply_markup=markup)


@bot.message_handler(func=lambda message: message.text == '–î–ª—è –∞–±–∏—Ç—É—Ä–∏–µ–Ω—Ç–∞')
def for_student(message: types.Message):
    markup = types.ReplyKeyboardMarkup()
    markup.row('–ö–∞–∫–∏–µ –¥–æ–∫—É–º–µ–Ω—Ç—ã –Ω—É–∂–Ω—ã –¥–ª—è –ø–æ—Å—Ç—É–ø–ª–µ–Ω–∏—è', '–ü—Ä–æ—Ö–æ–¥–Ω—ã–µ –±–∞–ª–ª—ã')
    markup.row('–ö–∞–∫–∏–µ –ø—Ä–µ–¥–º–µ—Ç—ã —Å–¥–∞–≤–∞—Ç—å', 'FAQüí°')
    bot.send_message(message.from_user.id, '–í–æ—Ç —Ä—É–∫–æ–≤–æ–¥—Å—Ç–≤–∞ –¥–ª—è —Å—Ç—É–¥–µ–Ω—Ç–∞',
                     reply_markup=markup)


@bot.message_handler(content_types=['text'])
def echo_mes(message: types.Message):
    bot.send_message(message.from_user.id, '–Ø –Ω–µ –ø–æ–Ω–∏–º–∞—é, —á—Ç–æ —Ç—ã –Ω–∞–ø–∏—Å–∞–ª, –ø–æ–ø—Ä–æ–±—É–π –µ—â–µ —Ä–∞–∑.',
                     reply_to_message_id=message.message_id)


bot.polling(True)
